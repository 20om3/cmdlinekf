#prel regex theory : https://qiita.com/konoui/items/2b4e76048a4518d7396b
#https://abicky.net/2010/05/30/135112/

#convert DOS to UNIX
tr '\r' '\n' < file.txt > newfile.txt

#show config of firewall on Windows
newsh firewall show portopening
netsh firewall show allowedprogram
netsh firewall show config

#show config of firewall on Linux
iptables -t nat -nL
iptables -t mangle -nL
iptables -t filter -nL
iptalbes -t raw -nL

#file count in a directory on Windows
for /L %i in (1,0,2) do @dir /b /a | find /c /v "" & ping -n 6 127.0.0.1>nul

#file count in a directory on Linux
while :; do ls | wc -l;sleep 5; done
watch -n 5 "ls | wc -l"

#listing files and their sizes on Windows
for /r c:\ %i in (*) do @echo %~zi, %i # see https://ss64.com/nt/for_r.html
for /r c:\ %i in (*) do @echo %~zi, %i >> filename.csv

#listing files and thier sizes on Linux
find /-type f -exec wc -c {} \;
find /-type f -exec wc -c {} \; |sort -n
find /-type f -exec wc -c {} \; |sort -nr|head -100

#Reverse DNS records in Linux
sed 's/\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\).in-addr.arpa domain name pointer\(.*\)\./\4.\3.\2.\1\5/' lookups.txt

#Reverse DNS records in Windows
FOR /F "tokens=1-5" %a in (lookups.txt) do @(@FOR /F "tokens=1-4 delims=." %i in ("%a") do @echo %l.%k.%j.%i %e)

#subnet ping sweep on Windows
FOR /L %i in (1,1,255) do @ping -n 1 -w 100 10.10.10.%i | find "Reply"

#subnet ping sweep on Linux
for i in `seq 1 255`; do ping -c 1 10.10.10.$i | tr \\n ' ' | awk '/1 received/ {print $2}'; done

#reboot at specific time
sleep 30; shutdown -r now
shutdown -r +1   #shutdown in 1 minute
shutdown -r 14:30    #at 14:30

#head and tail on Windows
find /v /n "" <file> | findstr /b /L [<n>] > temp.txt &
for /F "delims=[] tokens=2" %i in (temp.txt) do @echo %i & del temp.txt

#find filename containing searching string on Linux
find /usr/include -type f | xargs grep -l sockaddr_in >/dev/null   # -exec is slooooooow

#find filename containing searching string on Windows
findstr /s /d:c:\windows /m stringyouwant *     # /m tells windows to show only file names.

#file sort by creation time on Linux
ls -li /etc | sort -n

#file sort by creation time on Windows
dir /tc

#show all hotfix installed on Windows
wmic qfe list full   #qfe : Quick Fix Engineering

$mySession = New-Object -ComObject Microsoft.Update.Session 
$mySearcher = $mySession.CreateUpdateSearcher() 
$mySearcher.Search("IsInstalled=1").Updates | ft -a Date,Title

#show upgradable package list on Linux
apt-show-versions -u
yum list-security

#show installed packages on Mac
pkgutil --packages | grep com.apple.pkg.update*

#query each domain name of names.txt to DNS server from Windows
for /F %i in (names.txt) do @echo %i & nslookup -norecurse %i [DNSserver] | find "answer" & echo.

#query each domain name of names.txt to DNS server from Linux
for i in `cat names.txt`; do host -r $i [nameserver]; done

#flush DNS cache on Windows
ipconfig /flushdns

#show DNS cache on Linux
netstat -rCn

#delete contents of a file on Windows
type nul > afile.txt
copy nul > afile.txt

#search queried name file on Windows
dir /b /s c:\ | findstr /i vmware

#copy files (even with remote host) on Linux
rsync -aH wantdir/ todir/                          #copy wantdir to todir on same machine.without "/" copy the entire directory.
rsync -aH remotehost:/path/to/dir/ localdir/       #copy remote dir to local machine
rsync -aH dir/ remotehost:/path/to/dir/            #copy local dir to remote machine
rsync -aH dir/ someuser@remotehost:/path/to/dir/   #copy dir to remote host as someuser

#copy files on Windows
robocopy wantdir/ todir/ /s

#calculate on Windows cmd.exe
set /a 1+1     #integer only

#calculate on Linux
let RESULT=2+2; echo $RESULT
echo $((2+2))
expr 2 + 2

#rename all files on Linux
for f in *; do mv -- "$f" "${f// /_}"; done   # use "--" in case of "-" is in file names. ${variable/pattern/substitution} and / before pattern means "all"
for f in *; do mv -- "$f" "${f/#-/_}"; doneã€€ # replace "-" at the beginning of file name.
find docroot -type f -name \*.htm | while read f; do mv -- "$f" "${f/%.htm/.html}"; done  # replace ".htm" at the end of filename.
for f in *; do n="${f// /_}"; [ -f "$n" ] || mv -- "$f" "$n"; done  # if not the file, mv.

#show path on Windows
set path

#show path on Linux
env |grep PATH

